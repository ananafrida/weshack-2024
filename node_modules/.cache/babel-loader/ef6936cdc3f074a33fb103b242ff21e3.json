{"ast":null,"code":"import React, { memo, useMemo, useRef, useEffect } from \"react\";\nimport Typed from \"typed.js\";\nexport const ReactTyped = memo(({\n  style,\n  className,\n  typedRef,\n  parseRef: transformRef,\n  stopped,\n  children,\n  startWhenVisible,\n  ...typedOptions\n}) => {\n  const rootElement = useRef(null);\n  const shouldUpdateArgs = useMemo(() => [...Object.values(typedOptions).filter(v => typeof v === \"boolean\" || typeof v === \"number\" || typeof v === \"string\"), typedOptions.strings?.join(\",\")], [typedOptions]);\n  useEffect(() => {\n    const element = transformRef && transformRef(rootElement) || rootElement.current;\n    const typed = new Typed(element, {\n      ...typedOptions\n    });\n    if (stopped || startWhenVisible) {\n      typed?.stop();\n    }\n    if (startWhenVisible) {\n      const observer = new IntersectionObserver(([entry]) => {\n        if (entry.isIntersecting) {\n          typed?.start();\n          observer.disconnect();\n        }\n      });\n      observer.observe(element);\n    }\n    if (typedRef && typed) {\n      typedRef(typed);\n    }\n    return () => {\n      typed.destroy();\n    };\n  }, shouldUpdateArgs);\n  const child = !children ? React.createElement(\"span\", {\n    style: style,\n    ref: rootElement\n  }) : React.cloneElement(children, {\n    ref: rootElement\n  });\n  return React.createElement(\"span\", {\n    style: style,\n    className: className,\n    \"data-testid\": \"react-typed\"\n  }, child);\n});\nexport { Typed };","map":{"version":3,"names":["React","memo","useMemo","useRef","useEffect","Typed","ReactTyped","style","className","typedRef","parseRef","transformRef","stopped","children","startWhenVisible","typedOptions","rootElement","shouldUpdateArgs","Object","values","filter","v","strings","join","element","current","typed","stop","observer","IntersectionObserver","entry","isIntersecting","start","disconnect","observe","destroy","child","createElement","ref","cloneElement"],"sources":["../../src/index.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,UAAU;AAkL5B,OAAO,MAAMC,UAAU,GAA8BL,IAAI,CACvD,CAAC;EACCM,KAAK;EACLC,SAAS;EACTC,QAAQ;EACRC,QAAQ,EAAEC,YAAY;EACtBC,OAAO;EACPC,QAAQ;EACRC,gBAAgB;EAChB,GAAGC;AAAY,CAChB,KAAI;EACH,MAAMC,WAAW,GAAGb,MAAM,CAAM,IAAI,CAAC;EACrC,MAAMc,gBAAgB,GAAGf,OAAO,CAC9B,MAAM,CACJ,GAAGgB,MAAM,CAACC,MAAM,CAACJ,YAAY,CAAC,CAACK,MAAM,CAClCC,CAAC,IACA,OAAOA,CAAC,KAAK,SAAS,IACtB,OAAOA,CAAC,KAAK,QAAQ,IACrB,OAAOA,CAAC,KAAK,QAAQ,CACxB,EACDN,YAAY,CAACO,OAAO,EAAEC,IAAI,CAAC,GAAG,CAAC,CAChC,EACD,CAACR,YAAY,CAAC,CACf;EACDX,SAAS,CAAC,MAAK;IACb,MAAMoB,OAAO,GACVb,YAAY,IAAIA,YAAY,CAACK,WAAW,CAAC,IAAKA,WAAW,CAACS,OAAO;IACpE,MAAMC,KAAK,GAAG,IAAIrB,KAAK,CAACmB,OAAO,EAAE;MAAE,GAAGT;IAAY,CAAE,CAAC;IAErD,IAAIH,OAAO,IAAIE,gBAAgB,EAAE;MAC/BY,KAAK,EAAEC,IAAI,EAAE;IACf;IAEA,IAAIb,gBAAgB,EAAE;MACpB,MAAMc,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,KAAI;QACpD,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBL,KAAK,EAAEM,KAAK,EAAE;UACdJ,QAAQ,CAACK,UAAU,EAAE;QACvB;MACF,CAAC,CAAC;MACFL,QAAQ,CAACM,OAAO,CAACV,OAAO,CAAC;IAC3B;IAEA,IAAIf,QAAQ,IAAIiB,KAAK,EAAE;MACrBjB,QAAQ,CAACiB,KAAK,CAAC;IACjB;IACA,OAAO,MAAK;MACVA,KAAK,CAACS,OAAO,EAAE;IACjB,CAAC;EACH,CAAC,EAAElB,gBAAgB,CAAC;EAEpB,MAAMmB,KAAK,GAAG,CAACvB,QAAQ,GACrBb,KAAA,CAAAqC,aAAA;IAAM9B,KAAK,EAAEA,KAAK;IAAE+B,GAAG,EAAEtB;EAAW,EAAI,GAExChB,KAAK,CAACuC,YAAY,CAAC1B,QAAQ,EAAE;IAC3ByB,GAAG,EAAEtB;GACN,CACF;EACD,OACEhB,KAAA,CAAAqC,aAAA;IAAM9B,KAAK,EAAEA,KAAK;IAAEC,SAAS,EAAEA,SAAS;IAAA,eAAc;EAAa,GAChE4B,KAAK,CACD;AAEX,CAAC,CACF;AAED,SAAS/B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}