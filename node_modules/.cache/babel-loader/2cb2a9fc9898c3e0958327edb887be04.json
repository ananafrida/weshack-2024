{"ast":null,"code":"import{useEffect}from'react';export const UseMedia=(query,val,setMediaQuery)=>{const queryStr=`(${query}: ${val}px)`;useEffect(()=>{const mediaWatcher=window.matchMedia(queryStr);mediaWatcher.matches?setMediaQuery(true):setMediaQuery(false);function updateMediaWatcher(e){e.matches?setMediaQuery(true):setMediaQuery(false);}mediaWatcher.addEventListener('change',updateMediaWatcher);return function cleanup(){mediaWatcher.removeEventListener('change',updateMediaWatcher);};});};","map":{"version":3,"names":["useEffect","UseMedia","query","val","setMediaQuery","queryStr","mediaWatcher","window","matchMedia","matches","updateMediaWatcher","e","addEventListener","cleanup","removeEventListener"],"sources":["/Users/ananafrida/dummy-hackathon/src/hooks/useMedia.tsx"],"sourcesContent":["import {useEffect} from 'react';\n\nexport const UseMedia = (query: string, val: number, setMediaQuery: any) => {\n  const queryStr = `(${query}: ${val}px)`;\n\n  useEffect(() => {\n    const mediaWatcher = window.matchMedia(queryStr);\n    mediaWatcher.matches ? setMediaQuery(true) : setMediaQuery(false);\n\n    function updateMediaWatcher(e: any) {\n      e.matches ? setMediaQuery(true) : setMediaQuery(false);\n    }\n    mediaWatcher.addEventListener('change', updateMediaWatcher);\n\n    return function cleanup() {\n      mediaWatcher.removeEventListener('change', updateMediaWatcher);\n    };\n  });\n};\n"],"mappings":"AAAA,OAAQA,SAAS,KAAO,OAAO,CAE/B,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAACC,KAAa,CAAEC,GAAW,CAAEC,aAAkB,GAAK,CAC1E,KAAM,CAAAC,QAAQ,CAAG,IAAIH,KAAK,KAAKC,GAAG,KAAK,CAEvCH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAM,YAAY,CAAGC,MAAM,CAACC,UAAU,CAACH,QAAQ,CAAC,CAChDC,YAAY,CAACG,OAAO,CAAGL,aAAa,CAAC,IAAI,CAAC,CAAGA,aAAa,CAAC,KAAK,CAAC,CAEjE,QAAS,CAAAM,kBAAkBA,CAACC,CAAM,CAAE,CAClCA,CAAC,CAACF,OAAO,CAAGL,aAAa,CAAC,IAAI,CAAC,CAAGA,aAAa,CAAC,KAAK,CAAC,CACxD,CACAE,YAAY,CAACM,gBAAgB,CAAC,QAAQ,CAAEF,kBAAkB,CAAC,CAE3D,MAAO,SAAS,CAAAG,OAAOA,CAAA,CAAG,CACxBP,YAAY,CAACQ,mBAAmB,CAAC,QAAQ,CAAEJ,kBAAkB,CAAC,CAChE,CAAC,CACH,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}